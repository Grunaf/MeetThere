from aiogram import Router, F, types
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from bot import PlanningStates

router = Router()

@router.message(PlanningStates.waiting_for_event_link, F.text.startswith("http"))
async def handle_event_link(message: Message, state: FSMContext):
    url = message.text.strip()

    # –§–µ–π–∫–æ–≤—ã–π "–ø–∞—Ä—Å–∏–Ω–≥"
    event = {
        "title": "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø–æ —Å—Å—ã–ª–∫–µ",
        "datetime": "2025-04-12 19:00",
        "location": "–£—Ç–æ—á–Ω—è–µ—Ç—Å—è",
        "url": url
    }
    user_data = await state.get_data()
    summary = (
        f"–í–æ—Ç —á—Ç–æ —è –ø–æ–Ω—è–ª:\n"
        f"–ì–æ—Ä–æ–¥: {user_data.get('city', '-')}\n"
        f"–î–∞—Ç—ã: {user_data.get('dates', '-')}\n"
        f"–†–∞–π–æ–Ω: {user_data.get('accommodation', '-')}\n"
        f"–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {user_data.get('constraints', '-')}\n"
        "\n–í—Å—ë –≤–µ—Ä–Ω–æ? (–¥–∞/–Ω–µ—Ç)"
    )
    await message.answer(summary)
    await state.update_data(custom_events=[event])
    await message.answer(
        f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –º–∞—Ä—à—Ä—É—Ç:\n\n"
        f"üé´ {event['title']}\n"
        f"üìÖ {event['datetime']}\n"
        f"üìç {event['location']}\n\n"
        f"{summary}",
        reply_markup=types.ReplyKeyboardRemove()
    )
    await state.set_state(PlanningStates.confirmation)
