"""add slug for city

Revision ID: a5f0dd23235b
Revises: 8a0afdeb9300
Create Date: 2025-07-02 17:37:33.198637

"""
from alembic import op
from slugify import slugify
import sqlalchemy as sa

from flaskr.models.models import db
from flaskr.models.cities import City


# revision identifiers, used by Alembic.
revision = 'a5f0dd23235b'
down_revision = '8a0afdeb9300'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('city', schema=None) as batch_op:
        batch_op.add_column(sa.Column('slug', sa.String(), nullable=True))
        batch_op.create_unique_constraint(batch_op.f('uq_city_slug'), ['slug'])

    conn = op.get_bind()
    cities = conn.execute(sa.text("SELECT id, name FROM city")).fetchall()
    for city in cities:
        slug = slugify(city.name)
        conn.execute(sa.text("UPDATE city SET slug = :slug WHERE id = :id"),
        {"slug": slug, "id": city.id})
        
    with op.batch_alter_table('city', schema=None) as batch_op:
        batch_op.alter_column('slug', nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('city', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_city_slug'), type_='unique')
        batch_op.drop_column('slug')

    # ### end Alembic commands ###
